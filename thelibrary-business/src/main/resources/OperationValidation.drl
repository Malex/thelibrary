package com.benfante.thelibrary.application.business

import com.benfante.javacourse.thelibrary.application.model.Operation
import com.benfante.javacourse.thelibrary.application.model.Clerk
import com.benfante.javacourse.thelibrary.application.model.Enumerations.OperationType
import com.benfante.javacourse.thelibrary.application.model.Enumerations.DiscountType
import com.benfante.javacourse.thelibrary.application.model.Enumerations.ContractType
import com.benfante.javacourse.thelibrary.business.entity.Result
import function com.benfante.javacourse.thelibrary.application.util.ClerkUtils.isAvailable
import static com.benfante.javacourse.thelibrary.business.utils.ResultUtils.*
import org.slf4j.Logger
import org.slf4j.LoggerFactory

dialect "mvel"


global Logger log;

rule "Correct usage of discounts"
	salience 8
	lock-on-active true
    when
        $op : Operation( operationType!=OperationType.BUY, (discount!=null && discountType!=null)  )
        $res : Result( )
    then
    	log.warn("Discount non valido per questa operazione, procedo a rimuoverlo");
        $op.setDiscount(null);
        $op.setDiscountType(null);
        if($res.result==null) {
        	$res.setResult(true);
       		addWarning($res,"205","Discount invalid for this operation, it was removed");
       	} else {
       		if($res.result) {
       			addWarning($res,"205","Discount invalid for this operation, it was removed");
       		} else {
       			addNotPrimaryResult($res,"205","Discount invalid for this operation, it was removed");
       		}
       	}
end

rule "Is cleck available"
	salience 1
    when
        $op : Operation( $clerk : clerk, clerk.contract == ContractType.SEASONAL )
        $res : Result( )
    then
        if(! isAvailable( $clerk, $op.date ).booleanValue() ) {
        	$res.setResult(false);
        	addResult($res,"421","Clerk not available on "+$op.date);
        }	
end
